{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerrror","e","target","error","negociacoes","openCursor","atual","result","objeto","value","push","Negociacao","_data","_quantidade","_valor","continue","console","log","clear"],"mappings":";;;;;;IAAMA,a;AACF,2BAAYC,UAAZ,EAAwB;AAAA;;AACpB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;iCAEQC,U,EAAY;AAAA;;AACjB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,UAAU,MAAKN,WAAL,CACTO,WADS,CACG,CAAC,MAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,MAAKP,MAFR,EAGTQ,GAHS,CAGLP,UAHK,CAAd;;AAKAI,wBAAQI,SAAR,GAAoB,aAAK;AACrBN;AACH,iBAFD;;AAIAE,wBAAQK,QAAR,GAAmB,aAAK;AACpBN,2BAAOO,EAAEC,MAAF,CAASC,KAAhB;AACH,iBAFD;AAGH,aAbM,CAAP;AAcH;;;qCAEY;AAAA;;AACT,mBAAO,IAAIX,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIU,cAAc,EAAlB;;AAEA,oBAAIT,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGTe,UAHS,EAAd;;AAKAV,wBAAQI,SAAR,GAAoB,aAAK;AACrB,wBAAIO,QAAQL,EAAEC,MAAF,CAASK,MAArB;;AAEA,wBAAID,KAAJ,EAAW;AACP,4BAAIE,SAASF,MAAMG,KAAnB;AACAL,oCAAYM,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,OAAOI,KAAtB,EAA6BJ,OAAOK,WAApC,EAAiDL,OAAOM,MAAxD,CAAjB;AACAR,8BAAMS,QAAN;AACH,qBAJD,MAIO;AACHtB,gCAAQW,WAAR;AACH;AACJ,iBAVD;;AAYAT,wBAAQK,QAAR,GAAmB,aAAK;AACpBgB,4BAAQC,GAAR,CAAYhB,EAAEC,MAAF,CAASK,MAArB;AACAb,2BAAO,2CAAP;AACH,iBAHD;AAIH,aAxBM,CAAP;AAyBH;;;qCAEY;AAAA;;AACT,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT4B,KAHS,EAAd;;AAKAvB,wBAAQI,SAAR,GAAoB,aAAK;AACrBN;AACH,iBAFD;;AAIAE,wBAAQK,QAAR,GAAmB,aAAK;AACpBgB,4BAAQC,GAAR,CAAYhB,EAAEC,MAAF,CAASK,MAArB;AACAb,2BAAO,wCAAP;AACH,iBAHD;AAIH,aAdM,CAAP;AAeH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\r\n    constructor(connection) {\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n    adiciona(negociacao) {\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .add(negociacao);\r\n\r\n            request.onsuccess = e => {\r\n                resolve();\r\n            };\r\n\r\n            request.onerrror = e => {\r\n                reject(e.target.error);\r\n            };\r\n        });\r\n    }\r\n\r\n    listaTodos() {\r\n        return new Promise((resolve, reject) => {\r\n            let negociacoes = [];\r\n\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n\r\n            request.onsuccess = e => {\r\n                let atual = e.target.result;\r\n\r\n                if (atual) {\r\n                    let objeto = atual.value;\r\n                    negociacoes.push(new Negociacao(objeto._data, objeto._quantidade, objeto._valor));\r\n                    atual.continue();\r\n                } else {\r\n                    resolve(negociacoes);\r\n                }\r\n            };\r\n\r\n            request.onerrror = e => {\r\n                console.log(e.target.result);\r\n                reject('Não foi possível recuperar as negociações');\r\n            };\r\n        });\r\n    }\r\n\r\n    apagaTodos() {\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .clear();\r\n\r\n            request.onsuccess = e => {\r\n                resolve();\r\n            };\r\n\r\n            request.onerrror = e => {\r\n                console.log(e.target.result);\r\n                reject('Não foi possível apagar as negociações');\r\n            };\r\n        });\r\n    }\r\n}"]}