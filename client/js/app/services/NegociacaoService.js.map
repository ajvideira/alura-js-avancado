{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","http","HttpClient","Promise","all","obterNegociacoesSemana","obterNegociacoesSemanaAnterior","obterNegociacoesSemanaRetrasada","then","periodos","reduce","arrayAchatado","array","concat","catch","Error","erro","get","negociacoes","map","Negociacao","Date","objeto","data","quantidade","valor","console","log","negociacao","ConnectionFactory","getConnection","NegociacaoDao","conexao","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","negociacaoExistente","equals"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["class NegociacaoService {\r\n\r\n    constructor() {\r\n        this.http = new HttpClient();\r\n    }\r\n\r\n    obterNegociacoes() {\r\n        return Promise.all([\r\n                this.obterNegociacoesSemana(),\r\n                this.obterNegociacoesSemanaAnterior(),\r\n                this.obterNegociacoesSemanaRetrasada()\r\n            ])\r\n            .then(periodos =>\r\n                periodos.reduce((arrayAchatado, array) => arrayAchatado.concat(array), [])\r\n            ).catch(erro => {\r\n                throw new Error(erro);\r\n            });\r\n    }\r\n\r\n    obterNegociacoesSemana() {\r\n        return this.http.get('negociacoes/semana')\r\n            .then(negociacoes =>\r\n                negociacoes.map(objeto =>\r\n                    new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n            ).catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana');\r\n            });\r\n    }\r\n\r\n    obterNegociacoesSemanaAnterior() {\r\n        return this.http.get('negociacoes/anterior')\r\n            .then(negociacoes =>\r\n                negociacoes.map(objeto =>\r\n                    new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n            ).catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana anterior');\r\n            });\r\n    }\r\n\r\n    obterNegociacoesSemanaRetrasada() {\r\n        return this.http.get('negociacoes/retrasada')\r\n            .then(negociacoes =>\r\n                negociacoes.map(objeto =>\r\n                    new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n            ).catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana retrasada');\r\n            });\r\n    }\r\n\r\n    adiciona(negociacao) {\r\n        return ConnectionFactory.getConnection()\r\n            .then(conexao => new NegociacaoDao(conexao))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .catch(erro => {\r\n                throw new Error(erro);\r\n            });\r\n    }\r\n\r\n    listaTodos() {\r\n        return ConnectionFactory.getConnection()\r\n            .then(conexao => new NegociacaoDao(conexao))\r\n            .then(dao => dao.listaTodos())\r\n            .catch(erro => {\r\n                throw new Error(erro);\r\n            });\r\n    }\r\n\r\n    apagaTodos() {\r\n        return ConnectionFactory.getConnection()\r\n            .then(conexao => new NegociacaoDao(conexao))\r\n            .then(dao => dao.apagaTodos())\r\n            .catch(erro => {\r\n                throw new Error(erro);\r\n            });\r\n    }\r\n\r\n    importa(listaAtual) {\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes =>\r\n                negociacoes\r\n                .filter(negociacao => !listaAtual.some(negociacaoExistente =>\r\n                    negociacaoExistente.equals(negociacao)\r\n                ))\r\n            )\r\n            .catch(erro => {\r\n                throw new Error(erro);\r\n            });\r\n    }\r\n\r\n}"]}